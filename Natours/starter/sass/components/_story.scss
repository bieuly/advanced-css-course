.story {
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, .1);
    background-color: rgba($color-white, .8);
    border-radius: 3px;
    padding: 6rem;
    font-size: $default-font-size;
    padding-left: 9rem;
    
    &:not(:last-child) {
        margin-bottom: 6rem;
    }

    transform: skewX(-12deg);

    // Unfortunately this will not work because the shape already has a transform. You cannot have 2 transforms applied at the same time.
    // Meaning that we have to apply the skew(12deg) to the element themselves inside their exsting transform property
    // & > * {
    //     transform: skewX(12deg);
    // }

    &__shape {
        width: 15rem;
        height: 15rem;
        background-color: orangered;
        float: left;
        
        // This does not change the actual shape of the element but it changes what the shape looks like to other elements
        // This will cause the text to 'wrap around' the circle
        shape-outside: circle(50% at 50% 50%);
        // This actually changes the shape of the element
        clip-path: circle(50% at 50% 50%);

        // We use translate to move the shape because that is 'easier' for floated elements
        // We also need to skew here because direct child selector above does not work
        transform: translateX(-3rem) skewX(12deg);

        position: relative;
    }

    &__image {
        // We always want to set a width or height for images for responsive web design
        // Actually setting width here does not work because the image is not tall enough for a width of 15rem;
        // width: 100%;

        height: 100%;

        // This will move the image to be centered inside the figure
        transform: translateX(-4rem) scale(1.4);
        // We use this when ever there is some funky stuff going on with translations and animations
        backface-visibility: hidden;

        transition: all .5s;
    }

    &__text {
        // We need to skew here because direct child selector above does not work
        transform: skewX(12deg);
    }

    &__caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%);
        color: $color-white;
        text-transform: uppercase;
        font-size: 1.7rem;
        text-align: center;
        opacity: 0;
        transition: all .5s;
        // This fixes any buggy glichty stuff from animations
        backface-visibility: hidden;
    }

    &:hover &__caption {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    
    &:hover &__image {
        backface-visibility: hidden;
        transform: translateX(-4rem) scale(1);
        filter: blur(3px) brightness(80%)
    }
}