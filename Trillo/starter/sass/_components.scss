////////////////////////////////////////
//// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

////////////////////////////////////////
//// SEARCH
.search {
    flex: 0 0 40%;

    // Actually just setting display to flex already centers the magnifying glass vertically
    display: flex;
    align-items: center;
    // This keeps the search bar always centered even when it grows when its clicked
    justify-content: center;

    &__input {
        // By default font stuff does not automatically inherit from document
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: 1.7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);

        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: transparent;

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px)
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);
    }
}



////////////////////////////////////////
//// USER NAVIGATION
.user-nav {
    display: flex;
    align-items: center;
    // allow the entire container to stretch out vertically as much as possible
    align-self: stretch;

    // select direct children
    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;

        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
        // position relative doesn't work well with svg elements
        // position: relative;
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        // Centers the text inside the notification
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

////////////////////////////////////////
//// SIDE NAVIGTION

.side-nav {
    font-size: 1.4rem;
    margin-top: 3.5rem;
    list-style: none;

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);

        // width has .2s delay
        transition:
            transform .2s,
            width .2s cubic-bezier(1,0,0,1) .2s,
            background-color .1s;
        transform: scaleY(0);
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;

        // aligns svg and text
        display: flex;
        align-items: center;

        // z-index only works where position is set
        position: relative;
        z-index: 10;
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        // currentColor just refers to color of itself or parent or w.e the current color is (even on hover state)
        fill: currentColor;
    }
}

.legal {
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-grey-light-4);
}


.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block;
    }
}

.overview {
    display: flex;
    align-items: center;

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        // This is a trick to make the element only occupy the amount of space it needs for the content
        // This will set a margin for as for as possible
        margin-right: auto;

        // This will cause the stars to be perfectly vertically aligned. Without this line height was affecting the height
        // With flexbox line height does not affect the height.
        display:flex;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: white;
        margin-left: 3rem;
        padding: 0 2.25rem;

        // This allows height to fill to container
        align-self: stretch;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}

.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    display: inline-block;
    padding-bottom: 2px;
    cursor: pointer;
    transition: all .2s;


    &:hover {
        color: var(--color-grey-dark-1);
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    from {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0, .25);
    }

    to {
        transform: scale(1);
        box-shadow: none;
    }
}

// :last-of-child here will not work because the paragraphs are not the last childs of the container
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}

.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    display: flex;
    flex-wrap: wrap;

    &__item {
        // flex: <grow> <shrink> <width>
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: 1.7rem;

        // Older browsers
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;

        // Newer browsers
        background-color: var(--color-primary);
        mask-image: url(../img//chevron-thin-right.svg);
        mask-size: cover;
        -webkit-mask-image: url(../img//chevron-thin-right.svg);
        -webkit-mask-size: cover;
    }
}

.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count {
        margin-right: auto;
    }

    &__friends {

    }

    &__photo {
        // This is so that the border does not get included in the height and width 
        // Or else the images sizes will change
        box-sizing: content-box;
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid white;

        &:not(:last-child) {
            margin-right: -1.5rem;
        }
    }
}

.review {
    background-color: white;
    box-shadow: 0 1rem 4rem rgba(0,0,0, .25);
    padding: 3rem;
    margin-bottom: 5rem;
    position: relative;
    overflow: hidden;

    &__text {
        // to use z-index you need to have a position
        position: relative;
        z-index: 20;
    }

    &__user {
        display: flex;
        align-items: center;
        margin-top: 2rem;
    }

    &__photo {
        width: 4.5rem;
        height: 4.5rem;
        border-radius: 50%;
        margin-right: 2rem;
    }

    &__user-box {
        // nice trick!
        margin-right: auto;
    }

    &__user-name {
        text-transform: uppercase;
        color: var(--color-primary);
        font-weight: 600;
    }

    &__user-date {
        color: var(--color-grey-dark-3);
        font-size: 1.2rem;
    }

    &__rating {
        font-size: 2.5rem;
        color: var(--color-primary);
    }

    &::before {
        content: "\201C";
        position: absolute;
        top: -2.5rem;
        left: -.5rem;
        line-height: 1;
        font-size: 20rem;
        z-index: 10;
        font-family: sans-serif;
        color: var(--color-grey-light-2);
    }
}

.btn-inline {
    background-color: transparent;

    // This was an attempt to fix the underline spanning the entire width
    // There is a better way with align-items on the container; by default it is stretch
    // margin-right: auto;
    // margin-left: auto;

    & span {
        // transform does not work on inline elements, need to do inline block or block
        display: inline-block;
        transition: all .2s;
        margin-left: 3px;
    }

    &:hover span {
        // This transform doesn't expand the underline
        // transform: translateX(4px);
        margin-left: 8px;
    }
}

.booking {
    &__header {
        font-size: 1.7rem;
        font-weight: 300;
    }

    &__btn {
        margin-top: 3rem;
        
        color: white;
        font-size: 1.7rem;
        font-weight: 300;
        text-transform: uppercase;
        
        border: none;
        
        background-color: var(--color-primary);
        border-radius: 100px;

        position: relative;
        // overflow: hidden;

        & > * {
            display: inline-block;
            height: 100%;
            width: 100%;
            transition: all .2s;
        }

        &__visible {
            padding: 2rem 7.5rem;
        }

        &__invisible {
            position: absolute;
            // need to use 0 here or else won't have enough room
            padding: 2rem 0;
            left: 0;
            top: -100%;
        }

        &:hover &__visible {
            transform: translateY(100%);
        }

        &:hover &__invisible {
            top: 0;
        }
    }
}